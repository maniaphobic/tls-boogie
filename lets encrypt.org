#+TITLE: Managing Let's Encrypt TLS Certificates


* Introduction

This document explains how to manage [[https://letsencrypt.org][Let's Encrypt]] TLS certificates.

* Preliminaries

One uses EFF's [[https://certbot.eff.org/][Certbot]] shell tool to manage certificates.

On Debian-based distributions, install it thusly:

#+begin_src sh
  sudo apt install --yes certbot
#+end_src

See https://eff-certbot.readthedocs.io for documentation.

* Certbot command idioms

This section explains the most common Certbot command idioms. One must
run =certbot= as root.

** Request a new certificate

This invocation does the following:

  - =certonly=: acquire the certificate and save it to the local file
    system without changing the HTTP server's configuration
  - =--domain ...=: request a certificate for the specified FQDNs
  - =--webroot --webroot-path ...= use Certbot's "webroot"
    authentication method

#+begin_src sh
  sudo certbot certonly \
       --domain <domain> \
       --domain www.<domain> \
       --webroot \
       --webroot-path /var/www/html
#+end_src

In webroot authentication, certbot writes a uniquely-named file into
the HTTP server's document root directory. Let's Encrypt's server
requests this file and if successful, considers the request authentic
and issues a cert.

certbot writes the cert into its configuration directory.  See below
for the directory structure.

For details, read the [[https://eff-certbot.readthedocs.io/en/stable/using.html#getting-certificates-and-choosing-plugins][Getting certificates]] section of Certbot's
documentation.



*** Configure the HTTP server

**** Apache

Enable the =ssl= module:

#+begin_src sh
  a2enmod ssl
#+end_src

Add these directives to the virtual host configuration file:

#+begin_src conf
  <VirtualHost *:443>
    ...
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/<domain>/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/<domain>/privkey.pem
    ...
  </VirtualHost>
#+end_src

Restart Apache:

#+begin_src sh
  sudo systemctl restart apache2
#+end_src

** Renew a certificate

A Let's Encrypt certificate is valid for 90 days, at which point one
needs to renew it.

Certbot's =renew= command attempts to renew certs that are near
expiration:

#+begin_src sh
  sudo certbot renew
#+end_src

The =[renewalparams]= section in =renewal/<domain>.conf= determines
the authentication method that Certbot uses. In most cases, one wants
to use the =standalone= method.

Add =certbot renew= to a cron job to automate renewals.

** View installed certificates

Run this command to view installed certs:

#+begin_src sh
  sudo certbot certificates
#+end_src

* Configuration files and directories

certbot maintains its configuration in =/etc/letsencrypt=:

#+begin_src text
  /etc/letsencrypt/
    live/<domain>/                                   
      cert.pem -> ../../archive/cert1.pem
      chain.pem -> ../../archive/chain1.pem
      fullchain.pem -> ../../archive/fullchain1.pem
      privkey.pem -> ../../archive/privkey1.pem
    /renewal/<domain>.conf                           
    archive/<domain>/                                
      chain1.pem
      privkey1.pem
      fullchain1.pem
      cert1.pem
#+end_src

The =live/<domain>= directory contains <domain>'s active cert and
key. The files within symlink to counterparts in =archive/<domain>=.

The =archive/<domain>= directory contains current and past generations
of keys and certificates. The files belonging to each generation end
in a serial number. The files with the largest serial number are the
active certificate, the ones to which the files in =live/<domain>=
symlink.

For instance, a domain for which Let's Encrypt has issued four
certificates would have these files beneath
=/etc/letsencrypt/archive/<domain>=:

#+begin_src text
  chain1.pem
  fullchain1.pem
  cert1.pem
  privkey1.pem

  chain2.pem
  fullchain2.pem
  cert2.pem
  privkey2.pem

  chain3.pem
  fullchain3.pem
  cert3.pem
  privkey3.pem

  chain4.pem
  fullchain4.pem
  cert4.pem
  privkey4.pem
#+end_src

The =live/<domain>/*.pem= files would symlink to the =*4.pem= files.
